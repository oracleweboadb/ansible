---
- hosts: all
  vars:
    - container_registry: "localhost/"
    - autonomous_database_tag: ""
    - weblogic_server_tag: ""
    - autonomous_database_wallet_password: "123456789aA123"
    - autonomous_admin_password: "123456789aA123"
    - weblogic_username: "hello"
    - weblogic_password: "123456789"
    - security_properties: |-
        username={{ weblogic_username }}
        password={{ weblogic_password }}
        JAVA_OPTIONS=-Dweblogic.StdoutDebugEnabled=true
  tasks:
    - name: Create a oadb volume
      containers.podman.podman_volume:
        state: present
        name: oadb_volume
        label:
          owner: autonomous-database

    - name: "Create the autonomous database container"
      containers.podman.podman_container:
        name: oadb
        hostname: oadb
        image: "{{ container_registry }}oracle/oad:{{ autonomous_database_tag }}"
        publish:
        - 1521:1522
        - 1522:1522
        - 8443:8443
        - 27017:27017
        env:
          WORKLOAD_TYPE: ATP
          WALLET_PASSWORD: "{{ autonomous_database_wallet_password }}"
          ADMIN_PASSWORD: "{{ autonomous_admin_password }}"
        cap_add:
          - SYS_ADMIN
        device:
          - /dev/fuse
        volume:
          - "oadb_volume:/u01/data"
        state: started
        network: "oracle_network"
        network_aliases:
          - "oad"
        recreate: true
        generate_systemd:
          names: true
          restart_policy: always
      become: true

    - name: Ensure the directory /example/directory exists
      ansible.builtin.file:
        path: /tmp/properties
        state: directory
        mode: '0755'

    - name: Creating a file with content
      copy:
        dest: "/tmp/properties/security.properties"
        content: "{{ security_properties }}"

    - name: "Create the admin weblogic server container"
      containers.podman.podman_container:
        name: weblogic-admin
        hostname: weblogic-admin
        image: "{{ container_registry }}oracle/weblogic:{{ weblogic_server_tag }}"
        network: "oracle_network"
        network_aliases:
          - "wlsadmin"
        publish:
        - 7001:7001
        volume:
          - "/tmp/properties:/u01/oracle/properties:Z"
        state: started
        recreate: true
      become: true

    - name: "Create the managed weblogic server container"
      containers.podman.podman_container:
        name: managed-server1
        hostname: managed-server1
        image: "{{ container_registry }}oracle/weblogic:{{ weblogic_server_tag }}"
        env:
          MANAGED_SERV_NAME: "managed-server1"
        publish:
          - 8001:8001
        volume:
          - "/tmp/properties:/u01/oracle/properties:Z"
        state: started
        recreate: true
        command: "startManagedServer.sh"
        network: "oracle_network"
        network_aliases:
          - "managed-server-1"
        generate_systemd:
          names: true
          restart_policy: always
        quadlet_options:
          - "AutoUpdate=registry"
          - "Pull=true"
          - |
            [Install]
            WantedBy=default.target
      become: true

    - name: Generate systemd unit file for weblogic-admin
      containers.podman.podman_generate_systemd:
        name: weblogic-admin
        new: true
        no_header: true
        dest: /etc/systemd/system

    - name: Ensure weblogic-admin container is started and enabled
      ansible.builtin.systemd:
        name: container-weblogic-admin
        daemon_reload: true
        state: started
        enabled: true

    - name: Generate systemd unit file for managed-server-1
      containers.podman.podman_generate_systemd:
        name: managed-server1
        new: true
        no_header: true
        dest: /etc/systemd/system

    - name: Ensure managed-server-1 container is started and enabled
      ansible.builtin.systemd:
        name: container-managed-server1
        daemon_reload: true
        state: started
        enabled: true